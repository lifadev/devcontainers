name: Release feature

on:
  workflow_call:
    inputs:
      feature: { type: string, required: true }

jobs:
  setup:
    name: Setup

    permissions:
      contents: read

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Load config
        id: config
        env:
          FEATURE: ${{ inputs.feature }}
        run: |
          python3 <<EOF >> $GITHUB_OUTPUT

          import json
          from os import environ as env
          from pathlib import Path

          feature = Path("features/src") / env["FEATURE"]
          manifest = json.loads((feature / "devcontainer-feature.json").read_text())
          name, version = manifest["name"], manifest["version"]

          print(f"version={version}")
          EOF

    outputs:
      version: ${{ steps.config.outputs.version }}

  check:
    name: Check
    needs: setup

    permissions:
      packages: read

    runs-on: ubuntu-24.04

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check remote version
        id: check
        env:
          REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          NAMESPACE: ${{ vars.CONTAINER_NAMESPACE_FEATURE }}
          FEATURE: ${{ inputs.feature }}
          VERSION: ${{ needs.setup.outputs.version }}
        run: |
          SKIP=$(docker manifest inspect \
            "$REGISTRY/$NAMESPACE/$FEATURE:$VERSION" \
            >/dev/null 2>&1 && echo 1 || echo 0)
          echo "skip=$SKIP" >>$GITHUB_OUTPUT

    outputs:
      skip: ${{ steps.check.outputs.skip }}

  release:
    name: Release
    needs:
      - setup
      - check
    if: needs.check.outputs.skip == '0'

    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish feature
        env:
          REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          NAMESPACE: ${{ vars.CONTAINER_NAMESPACE_FEATURE }}
          FEATURE: ${{ inputs.feature }}
        run: |
          cp \
            ./features/lib/install.sh \
            "./features/src/$FEATURE/dev-container-features-install-lib"
          npx -y @devcontainers/cli features publish \
            --registry "$REGISTRY" \
            --namespace "$NAMESPACE" \
            "features/src/$FEATURE"
