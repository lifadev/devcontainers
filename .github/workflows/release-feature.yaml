name: Release feature

on:
  workflow_call:
    inputs:
      feature:
        type: string
        required: true

jobs:
  setup:
    name: Setup

    permissions:
      contents: read

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Load config
        id: config
        run: |
          python3 <<EOF >> $GITHUB_OUTPUT

          import json
          from pathlib import Path

          FEATURE = "${{ inputs.feature }}"

          target = f"ghcr.io/lifadev/devcontainers/features/{FEATURE}"
          feature = Path("features/src") / FEATURE
          manifest = json.loads((feature / "devcontainer-feature.json").read_text())
          name, version = manifest["name"], manifest["version"]

          print(f"target={target}")
          print(f"version={version}")
          EOF

    outputs:
      target: ${{ steps.config.outputs.target }}
      version: ${{ steps.config.outputs.version }}

  check:
    name: Check
    needs: setup

    permissions:
      packages: read

    runs-on: ubuntu-24.04

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check remote version
        id: check
        run: |
          TARGET="${{ needs.setup.outputs.target }}"
          VERSION="${{ needs.setup.outputs.version }}"

          SKIP=$(docker manifest inspect \
            $TARGET:$VERSION \
            >/dev/null 2>&1 && echo 1 || echo 0)
          echo "skip=$SKIP" >>$GITHUB_OUTPUT

    outputs:
      skip: ${{ steps.check.outputs.skip }}

  release:
    name: Release
    needs:
      - setup
      - check
    if: needs.check.outputs.skip == '0'

    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish feature
        run: |
          FEATURE="${{ inputs.feature }}"

          npx -y @devcontainers/cli features publish \
            --registry ghcr.io \
            --namespace lifadev/devcontainers/features \
            features/src/$FEATURE
