name: Test images

on:
  workflow_call:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-24.04

    permissions:
      contents: read

    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate matrix
        id: generate-matrix
        run: |
          python3 <<EOF >> $GITHUB_OUTPUT

          import json
          from pathlib import Path

          images = []
          for image in Path("images").iterdir():
            if not image.is_dir(): continue
            config = json.loads((image / ".devcontainer" / "devcontainer.json").read_text())
            manifest = config["customizations"]["manifest"]
            name, version = manifest["name"], manifest["version"]
            tags = version.split(".")
            tags = ['.'.join(tags[0:i+1]) for i in range(len(tags))] + ["latest"]
            images.append({ "name": name, "tags": ", ".join(tags) })

          if images:
            print(f'matrix={json.dumps({"image": images})}')

  test:
    name: Test
    if: ${{ needs.setup.outputs.matrix != '' && toJson(fromJson(needs.setup.outputs.matrix)) != '{}' }}
    needs: setup
    runs-on: ubuntu-24.04

    permissions:
      contents: read

    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test images
        uses: devcontainers/ci@v0.3
        with:
          platform: linux/amd64
          push: never
          subFolder: ./images/${{ matrix.image.name }}
